{"version":3,"sources":["components/navbar/navbar.js","components/login/login.js","components/dashboard/dashboard.js","components/search/search.js","components/review/review.js","components/about-us/about-us.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayNavLinks","localStorage","getItem","state","auth","react_default","a","createElement","BurgerMenu","assign","isOpen","menuOpen","onStateChange","handleStateChange","right","width","id","react_router_dom","onClick","closeMenu","to","handleLogout","setState","react","className","Component","Login","saveUserId","user","setItem","JSON","stringify","username","handleChange","event","target","value","handleSubmit","preventDefault","superagent","get","query","data","then","result","body","handleLogin","history","push","catch","err","console","log","onSubmit","type","name","placeholder","onChange","required","Dashboard","concat","handleTabChange","index","activeIndex","handleRecommended","review","parseInt","recommended","handleTweet","movieReview","tweetBody","created_on","title","rating","post","set","send","res","error","userId","userName","newUser","suggested","reviewedMovies","promiseIsResolved","parse","suggestions","reviews","match","params","tab","_context","t0","_this2","src","alt","lib","customStyle","onTabChange","map","movie","key","movie_id","image_url","synopsis","toUpperCase","href","require","config","Search","movies","url","_this3","length","Review","notify","toast","autoClose","position","handleChangeReview","handleChangeRating","user_id","released_on","text","setTimeout","thumbsUp","active","like","dislike","thumbsDown","redirect","rows","cols","aria-hidden","react_toastify","AboutUs","App","clear","navbar_Navbar","react_router","exact","path","render","login_Login","component","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2fe9517b.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { elastic as Menu } from 'react-burger-menu';\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      auth: this.props.auth,\n      menuOpen: false\n    };\n  }\n\n  // This keeps your state in sync with the opening/closing of the menu\n  handleStateChange(state) {\n    this.setState({ menuOpen: state.isOpen });\n  }\n\n  // This is being used to close the menu when a user clicks a menu item\n  closeMenu() {\n    this.setState({ menuOpen: false });\n  }\n\n  displayNavLinks = props => {\n    if (localStorage.getItem('userId') || this.state.auth) {\n      return (\n        <Menu\n          isOpen={this.state.menuOpen}\n          onStateChange={state => this.handleStateChange(state)}\n          right\n          width={'200px'}\n          {...props}\n        >\n          <ul id=\"navbar-links\">\n            <Link onClick={() => this.closeMenu()} to=\"/dashboard\">\n              <li>Dashboard</li>\n            </Link>\n            <Link onClick={() => this.closeMenu()} to=\"/about-us\">\n              <li>About</li>\n            </Link>\n            <Link onClick={() => this.closeMenu()} to=\"/\">\n              <li onClick={this.props.handleLogout}>Logout</li>\n            </Link>\n          </ul>\n        </Menu>\n      );\n    } else {\n      return (\n        <Menu\n          isOpen={this.state.menuOpen}\n          onStateChange={state => this.handleStateChange(state)}\n          right\n          width={'200px'}\n          {...props}\n        >\n          <ul id=\"navbar-links\">\n            <Link onClick={() => this.closeMenu()} to=\"/dashboard\">\n              <li>Dashboard</li>\n            </Link>\n            <Link onClick={() => this.closeMenu()} to=\"/about-us\">\n              <li>About</li>\n            </Link>\n          </ul>\n        </Menu>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <nav className=\"navbar\">\n          <Link to=\"/dashboard\">\n            <div id=\"title-logo\" />\n          </Link>\n\n          {this.displayNavLinks()}\n        </nav>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from 'react';\nimport superagent from 'superagent';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: ''\n    };\n  }\n\n  saveUserId = user => {\n    localStorage.setItem('userId', JSON.stringify(user[0].id));\n    localStorage.setItem('userName', JSON.stringify(user[0].username));\n    localStorage.setItem('newUser', JSON.stringify(user[1]));\n    // TODO save the ID from the backend to LS\n  };\n\n  handleChange = event => {\n    this.setState({\n      username: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //console.log('Username: ', this.state.username);\n\n    //login routing to connect to backend\n    superagent\n      .get('/login')\n      .query({\n        data: this.state.username\n      })\n      .then(result => {\n        this.saveUserId(result.body);\n\n        this.props.handleLogin();\n        this.props.history.push(\"/dashboard\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div id=\"login\" className=\"component-container\">\n          <h1>Login</h1>\n\n          <form onSubmit={this.handleSubmit}>\n            <div>\n              <input\n                id=\"username-entry\"\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                placeholder=\"Enter your username\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div>\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n          <p>* If you don't have an account, no worries; upon logging in a new account will be created for you.</p>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, TabList, Tab, PanelList, Panel } from 'react-tabtab';\nimport * as customStyle from 'react-tabtab/lib/themes/bootstrap';\nimport superagent from 'superagent';\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userId: null,\n      userName: '',\n      newUser: '',\n      query: '',\n      activeIndex: 0,\n      suggested: [],\n      reviewedMovies: [],\n      promiseIsResolved: false\n    };\n  }\n\n  // first function that is called what page is loaded\n  // will get data first and then render component\n  // Gets suggestions data from server\n  async componentDidMount() {\n    if (localStorage.getItem('userId')) {\n      const userId = JSON.parse(localStorage.getItem('userId'));\n      try {\n        const suggestions = await superagent.get('/suggestions');\n        const reviews = await superagent\n          .get('/reviews')\n          .query({ data: userId });\n\n        let index;\n        if (this.props.match.params.tab) {\n          index = parseInt(this.props.match.params.tab);\n        } else {\n          index = 0;\n        }\n\n        this.setState({\n          reviewedMovies: reviews.body,\n          suggested: suggestions.body,\n          userId: JSON.parse(localStorage.getItem('userId')),\n          userName: JSON.parse(localStorage.getItem('userName')),\n          newUser: JSON.parse(localStorage.getItem('newUser')),\n          activeIndex: index,\n          promiseIsResolved: true\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      this.props.history.push('/');\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      query: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.history.push(`/search/${this.state.query}`);\n  };\n\n  handleTabChange = index => {\n    this.setState({ activeIndex: index });\n  };\n\n  handleRecommended = review => {\n    return parseInt(review.recommended) === 1 ? (\n      <i className=\"far fa-thumbs-up\" />\n    ) : (\n      <i className=\"fas fa-thumbs-down\" />\n    );\n  };\n\n  handleTweet = (event, movieReview) => {\n    event.preventDefault();\n    let tweetBody = `Created On:${movieReview.created_on}\n    Movie Title: ${movieReview.title}\n    Rating:${movieReview.rating}\n    Recommended:${movieReview.recommended}\n    Review:${movieReview.review}`;\n\n    superagent\n      .post('/tweet')\n      .set('Content-Type', 'application/json')\n      .send({ review: tweetBody })\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    const waitForAsync = () => {\n      if (!this.state.promiseIsResolved) {\n        return null;\n      } else {\n        return (\n          <div id=\"dashboard\" className=\"component-container\">\n            <img\n              className=\"profile-pic\"\n              src={`https://avatars.dicebear.com/v2/bottts/${\n                this.state.userId\n              }.svg`}\n              alt=\"Profile\"\n            />\n            <h1>{`Welcome, ${this.state.userName}!!`}</h1>\n\n            <div id=\"react-tab\">\n              <Tabs\n                customStyle={customStyle}\n                activeIndex={this.state.activeIndex}\n                onTabChange={this.handleTabChange}\n              >\n                <TabList className=\"tab-list\">\n                  <Tab>\n                    <i className=\"far fa-thumbs-up\" /> Suggestions\n                  </Tab>\n                  <Tab>\n                    <i className=\"fas fa-film\" /> Reviewed Movies\n                  </Tab>\n                </TabList>\n                <PanelList className=\"panel-list\">\n                  <Panel>\n                    <h2>Suggested Movies</h2>\n                    <ul className=\"suggested-list\">\n                      {this.state.suggested.map(movie => {\n                        return (\n                          <li key={movie.movie_id}>\n                            <div className=\"movie-poster\">\n                              <Link to={`/review/${movie.movie_id}`}>\n                                <img src={movie.image_url} alt={movie.title} />\n                              </Link>\n                            </div>\n                            <div>\n                              <Link to={`/review/${movie.movie_id}`}>\n                                <h3>{movie.title}</h3>\n                              </Link>\n                              <p className=\"synopsis\">{movie.synopsis}</p>\n                            </div>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </Panel>\n                  <Panel>\n                    <h2>Reviewed Movies</h2>\n                    <ul className=\"movie-list\">\n                      {this.state.reviewedMovies.map(review => {\n                        return (\n                          <li key={review.id}>\n                            <div className=\"review-poster\">\n                              <Link to={`/review/${review.movie_id}`}>\n                                <img\n                                  src={review.image_url}\n                                  alt={review.title}\n                                />\n                              </Link>\n                            </div>\n                            <div>\n                              <Link to={`/review/${review.movie_id}`}>\n                                <h3>{review.title.toUpperCase()}</h3>\n                              </Link>\n                              <p>Review: {review.review}</p>\n                              <p>Rating: {review.rating}</p>\n                              <p>Recommend: {this.handleRecommended(review)}</p>\n                              <span>\n                                Created: {review.created_on}{' '}\n                                <a\n                                  href=\"\"\n                                  onClick={event =>\n                                    this.handleTweet(event, review)\n                                  }\n                                >\n                                  <i\n                                    onClick={event =>\n                                      this.handleTweet(event, review)\n                                    }\n                                    className=\"fab fa-twitter\"\n                                  />\n                                </a>\n                              </span>\n                            </div>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </Panel>\n                </PanelList>\n              </Tabs>\n            </div>\n\n            <form onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                name=\"query\"\n                value={this.state.query}\n                placeholder=\"Search for a movie\"\n                onChange={this.handleChange}\n                required\n              />\n              <button type=\"submit\">\n                <i className=\"fas fa-search\" />\n              </button>\n            </form>\n          </div>\n        );\n      }\n    };\n\n    return <Fragment>{waitForAsync()}</Fragment>;\n  }\n}\n","import React, { Fragment, Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport superagent from 'superagent';\n\nrequire('dotenv').config();\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: this.props.match.params.query,\n      movies: [],\n      promiseIsResolved: false\n    };\n  }\n\n  componentDidMount() {\n    // make request off of query parameter being passed from dashboard.js\n    superagent\n      .get('/movies')\n      .query({\n        data: this.state.query,\n        url: 'movies'\n      })\n      .then(result => {\n        this.setState({\n          movies: result.body,\n          promiseIsResolved: true\n        });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  render() {\n    const waitForAsync = () => {\n      if (!this.state.promiseIsResolved) {\n        return null;\n      } else {\n        if (this.state.movies.length === 0) {\n          return (\n            <div>\n              <p>Sorry no movies were found.</p>\n              <Link to=\"/dashboard\">Please Try again.</Link>\n            </div>\n          );\n        } else {\n          return (\n            <ul className=\"movie-list\">\n              {this.state.movies.map(movie => {\n                return (\n                  <li key={movie.movie_id}>\n                    <div className=\"movie-poster\">\n                      <Link to={`/review/${movie.movie_id}`}>\n                        <img src={movie.image_url} alt={movie.title} />\n                      </Link>\n                    </div>\n                    <div>\n                      <Link to={`/review/${movie.movie_id}`}>\n                        <h3>{movie.title}</h3>\n                      </Link>\n                      <p className=\"synopsis\">{movie.synopsis}</p>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          );\n        }\n      }\n    };\n\n    return (\n      <Fragment>\n        <div id=\"Search\" className=\"component-container\">\n          <h1>Search results</h1>\n          {waitForAsync()}\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from 'react';\nimport superagent from 'superagent';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Review extends Component {\n  notify = () =>\n    toast('Thanks for your review!', {\n      autoClose: 1500,\n      position: 'top-center'\n    });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie_id: this.props.match.params.movie_id,\n      movie: {},\n      review: '',\n      rating: 1,\n      recommended: '',\n      active: {\n        like: '',\n        dislike: ''\n      },\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    // Make a http get request using superagent\n    // Save response into state as movie object\n\n    superagent\n      .get('/search')\n      .query({\n        data: this.state.movie_id,\n        url: 'search'\n      })\n      .then(result => {\n        this.setState({\n          movie: result.body\n        });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  handleChangeReview = event => {\n    this.setState({\n      review: event.target.value\n    });\n  };\n\n  handleChangeRating = event => {\n    this.setState({\n      rating: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    this.notify();\n    event.preventDefault();\n\n    // TODO Send post request to server which will save review into DB\n    // Send an object which includes the user id, review, movie id, rating & recommend\n    // Send movie details data movie_id, title, overview, released_on, image_url\n    // Get user ID from local storage\n    const data = {\n      user_id: localStorage.getItem('userId'),\n      movie: {\n        movie_id: this.state.movie_id,\n        title: this.state.movie.title,\n        synopsis: this.state.movie.synopsis,\n        released_on: this.state.movie.released_on,\n        image_url: this.state.movie.image_url\n      },\n      review: {\n        text: this.state.review,\n        rating: this.state.rating,\n        recommended: this.state.recommended\n      }\n    };\n    superagent\n      .post('/review')\n      .set('Content-Type', 'application/json')\n      .send(data)\n      .then(result => {\n        setTimeout(() => {\n          this.props.history.push('/dashboard/1');\n        }, 1500);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  thumbsUp = () => {\n    this.setState({\n      recommended: 1,\n      active: {\n        like: 'active',\n        dislike: ''\n      }\n    });\n  };\n\n  thumbsDown = () => {\n    this.setState({\n      recommended: 0,\n      active: {\n        like: '',\n        dislike: 'active'\n      }\n    });\n  };\n  render() {\n    return (\n      <Fragment>\n        <div id=\"Review\" className=\"component-container\">\n          <section className=\"movie-info\">\n            <div className=\"movie-poster\">\n              <img\n                src={this.state.movie.image_url}\n                alt={this.state.movie.title}\n              />\n            </div>\n            <div>\n              <h1>{this.state.movie.title}</h1>\n              <h4>{'Movie Synopsis: '.toUpperCase()}</h4>\n              <p id=\"synopsis\">{this.state.movie.synopsis}</p>\n            </div>\n          </section>\n\n          <form onSubmit={this.handleSubmit} className=\"review-form\">\n            <h2>Write your review</h2>\n            <textarea\n              id=\"review-text-box\"\n              rows=\"6\"\n              cols=\"45\"\n              value={this.state.review}\n              onChange={this.handleChangeReview}\n              required\n            />\n            <div> Would you recommend this film to your friends? </div>\n            <div className=\"thumbsUpOrDown\">\n              <div className=\"rating\">\n                {/* <!-- Thumbs up --> */}\n                <div className=\"like grow\">\n                  <i\n                    onClick={this.thumbsUp}\n                    className={`fa fa-thumbs-up fa-3x like ${\n                      this.state.active.like\n                    }`}\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                {/* <!-- Thumbs down --> */}\n                <div className=\"dislike grow\">\n                  <i\n                    onClick={this.thumbsDown}\n                    className={`fa fa-thumbs-down fa-3x like ${\n                      this.state.active.dislike\n                    }`}\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <select\n              value={this.state.rating}\n              onChange={this.handleChangeRating}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n            <br />\n            <br />\n\n            <button type=\"submit\">Save your review</button>\n            <ToastContainer />\n          </form>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment } from 'react';\n\nexport default function AboutUs() {\n  return (\n    <Fragment>\n      <div id=\"AboutUs\" className=\"component-container\">\n        <h1>Fluid Design</h1>\n        <p>\n          Fresh as the spring rain. Churning and thrashing as rapids. Swift as\n          the stream. Patient as glacial runoff. Cool as the winter snow.\n          Amorphous and changeable throughout. We are Fluid Design.\n          #we'rethesmartgroup\n        </p>\n        <hr />\n        <img\n          src=\"https://avatars.dicebear.com/v2/bottts/janehur.svg\"\n          alt=\"Jane\"\n        />\n        <h2>Jane Hur</h2>\n        <p>\n          A spellcaster from the Land of the Winds that trained with the Great\n          Lakes Ancients, she still practices the old ways, hexing code into any\n          shape imaginable and likely the one that most amuses her. Rightly\n          feared by the Council of Guardians for the power of her code magic,\n          she can bend any code base to her will.\n        </p>\n        <a href=\"https://github.com/janiekyu\">\n          <i className=\"fab fa-github\">Github</i>\n        </a>\n        <hr />\n        <img\n          src=\"https://avatars.dicebear.com/v2/bottts/brandonhurrington.svg\"\n          alt=\"Brandon\"\n        />\n        <h2>Brandon Hurrington</h2>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat.{' '}\n        </p>\n        <a href=\"https://github.com/Kai-ros\">\n          <i className=\"fab fa-github\">Github</i>\n        </a>\n        <hr />\n        <img\n          src=\"https://avatars.dicebear.com/v2/bottts/melfiperez.svg\"\n          alt=\"Melfi\"\n        />\n        <h2>Melfi Perez</h2>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat.{' '}\n        </p>\n        <a href=\"https://github.com/perezm27\">\n          <i className=\"fab fa-github\">Github</i>\n        </a>\n        <hr />\n        <img\n          src=\"https://avatars.dicebear.com/v2/bottts/mattstuhring.svg\"\n          alt=\"Matt\"\n        />\n        <h2>Matt Stuhring</h2>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat.{' '}\n        </p>\n        <a href=\"https://github.com/mattstuhring\">\n          <i className=\"fab fa-github\">Github</i>\n        </a>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment, Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Navbar from \"./navbar/navbar.js\";\nimport Login from \"./login/login.js\";\nimport Dashboard from \"./dashboard/dashboard.js\";\nimport Search from \"./search/search.js\";\nimport Review from \"./review/review.js\";\nimport AboutUs from \"./about-us/about-us.js\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      auth: false\n    };\n  }\n\n  handleLogout = () => {\n    localStorage.clear();\n    this.setState({auth: false}); \n  }\n\n  handleLogin = () => {\n    this.setState({auth: true });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <Navbar auth={this.state.auth} handleLogout={this.handleLogout}/>\n          <Switch>\n            <Route exact path=\"/\" render={(props) => <Login {...props} handleLogin={this.handleLogin}/>} />\n            <Route path=\"/dashboard/:tab?\" component={Dashboard} />\n            <Route path=\"/search/:query\" component={Search} />\n            <Route path=\"/review/:movie_id\" component={Review} />\n            <Route path=\"/about-us\" component={AboutUs} />\n          </Switch>\n        </Fragment>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./styles/reset.css\";\nimport \"./styles/app.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}