{"version":3,"sources":["components/navbar/navbar.js","components/login/login.js","components/dashboard/dashboard.js","components/search/search.js","components/review/review.js","components/about-us/about-us.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","react","className","react_router_dom","to","id","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","saveUserId","user","localStorage","setItem","JSON","stringify","username","handleChange","event","setState","target","value","handleSubmit","preventDefault","superagent","get","query","data","state","then","result","console","log","body","history","push","catch","err","onSubmit","type","name","placeholder","onChange","required","Component","Dashboard","concat","handleTabChange","index","activeIndex","userId","userName","suggested","reviewedMovies","getItem","parse","suggestions","reviews","error","_context","t0","src","alt","lib","customStyle","onTabChange","map","movie","key","movie_id","image_url","title","synopsis","review","rating","require","config","Search","match","params","movies","_this2","url","Review","handleChangeReview","handleChangeRating","user_id","released_on","text","recommended","post","set","send","rows","cols","AboutUs","class","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1a26648.chunk.js","sourcesContent":["import React, { Fragment, Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n  return (\n    <Fragment>\n      <nav className=\"navbar\">\n        <Link to=\"/\">\n          <div id=\"title-logo\"></div>\n        </Link>\n\n        <ul id=\"navbar-links\">\n          <Link to=\"/dashboard\">\n            <li>Dashboard</li>\n          </Link>\n          <Link to=\"/search\">\n            <li>Search</li>\n          </Link>\n          <Link to=\"/review\">\n            <li>Review</li>\n          </Link>\n          <Link to=\"/about-us\">\n            <li>About</li>\n          </Link>\n        </ul>\n      </nav>\n    </Fragment>\n  );\n}\n","import React, { Fragment, Component } from 'react';\nimport superagent from 'superagent';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: ''\n    };\n  }\n\n  saveUserId = user => {\n    localStorage.setItem('userId', JSON.stringify(user.id));\n    localStorage.setItem('userName', JSON.stringify(user.username));\n    // TODO save the ID from the backend to LS\n  };\n\n  handleChange = event => {\n    this.setState({\n      username: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //console.log('Username: ', this.state.username);\n\n    //login routing to connect to backend\n    superagent\n      .get('/login')\n      .query({\n        data: this.state.username\n      })\n      .then(result => {\n        console.log('result body: ', result.body);\n        this.saveUserId(result.body);\n        this.props.history.push(\"/dashboard\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div id=\"login\" className=\"component-container\">\n          <h1>Login</h1>\n\n          <form onSubmit={this.handleSubmit}>\n            <div>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                placeholder=\"Enter your username\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div>\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, TabList, Tab, PanelList, Panel } from 'react-tabtab';\nimport * as customStyle from 'react-tabtab/lib/themes/bootstrap';\nimport superagent from 'superagent';\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userId: null,\n      userName: '',\n      query: '',\n      activeIndex: 0,\n      suggested: [],\n      reviewedMovies: []\n    };\n  }\n\n  // first function that is called what page is loaded\n  // will get data first and then render component\n  // Gets suggestions data from server\n  async componentDidMount() {\n    \n    if (localStorage.getItem('userId')) {\n      const userId = JSON.parse(localStorage.getItem('userId'));\n      try {\n        const suggestions = await superagent.get('/suggestions');\n        const reviews = await superagent.get('/reviews').query({data: userId});\n\n        this.setState({\n          reviewedMovies: reviews.body,\n          suggested: suggestions.body,\n          userId: JSON.parse(localStorage.getItem('userId')), \n          userName: JSON.parse(localStorage.getItem('userName'))\n        })\n      } catch(err){\n        console.error(err)\n      }\n      \n    } else {\n      this.props.history.push('/');\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      query: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.history.push(`/search/${this.state.query}`);\n  };\n\n  handleTabChange = index => {\n    this.setState({ activeIndex: index });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div id=\"dashboard\" className=\"component-container\">\n\n        <img className=\"profile-pic\" src={`https://avatars.dicebear.com/v2/bottts/${this.state.userId}.svg`} alt=\"Profile\" />\n          <h1>{`Welcome, ${this.state.userName}!!`}</h1>\n\n          <div id=\"react-tab\">\n            <Tabs\n              customStyle={customStyle}\n              activeIndex={this.state.activeIndex}\n              onTabChange={this.handleTabChange}\n            >\n\n            <TabList className=\"tab-list\">\n              <Tab><i className=\"far fa-thumbs-up\"/> Suggestions</Tab>\n              <Tab><i className=\"fas fa-film\"/> Movies</Tab>\n            </TabList>\n            <PanelList className=\"panel-list\">\n              <Panel>\n                <h2>Suggested Movies</h2>\n                \n                <ul className=\"suggested-list\">\n                  {this.state.suggested.map(movie => {\n                    return <li key={movie.movie_id}>\n                    <div className=\"movie-poster\"><Link to={`/review/${movie.movie_id}`}><img src={movie.image_url} /></Link></div>\n                    <div>\n                      <Link to={`/review/${movie.movie_id}`}>\n                        <h3>{movie.title}</h3>\n                      </Link>\n                      <p className=\"synopsis\">{movie.synopsis}</p>\n                    </div>\n                    </li>\n                  })}\n                </ul>\n\n              </Panel>\n              <Panel>\n                <h2>Reviewed Movies</h2>\n\n                <ul className=\"movie-list\">\n                  {this.state.reviewedMovies.map(review => {\n                    return <li key={review.id}>\n                      <div className=\"review-poster\">\n                        <Link to={`/review/${review.movie_id}`}>\n                          <img src={review.image_url} />\n                        </Link>\n                      </div>\n                      <div>\n                        <Link to={`/review/${review.movie_id}`}>\n                          <h3>{review.title}</h3>\n                        </Link>\n                        <p>Review: {review.review}</p>\n                        <p>Rating: {review.rating}</p>\n                      </div>\n                    </li>\n                  })}\n                </ul>\n              </Panel>\n            </PanelList>\n          </Tabs>\n\n          </div>\n\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"query\"\n              value={this.state.query}\n              placeholder=\"Search for a movie\"\n              onChange={this.handleChange}\n              required\n            />\n            <button type=\"submit\">\n              <i className=\"fas fa-search\" />\n            </button>\n          </form>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport superagent from \"superagent\";\n\nrequire('dotenv').config()\n\nexport default class Search extends Component{\n  constructor(props) {\n    super(props);\n    //console.log(this.props.match.params.query)\n    this.state = {\n      query: this.props.match.params.query,\n      movies: []\n    };\n  }\n\n  componentDidMount(){\n    // make request off of query parameter being passed from dashboard.js\n    \n    superagent\n      .get('/movies')\n      .query({\n        data: this.state.query, \n        url: 'movies'\n      })\n      .then(result => {\n        //console.log(result.body);\n         this.setState({\n          movies: result.body\n        })\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  render(){\n    return (\n      <Fragment>\n        <div id=\"Search\" className=\"component-container\">\n          <h1>Search results</h1>\n          <ul className=\"movie-list\">\n            {this.state.movies.map(movie => {\n              return <li key={movie.movie_id}>\n              <div className=\"movie-poster\"><Link to={`/review/${movie.movie_id}`}><img src={movie.image_url} alt={movie.title} /></Link></div>\n              <div>\n                <Link to={`/review/${movie.movie_id}`}>\n                  <h3>{movie.title}</h3>\n                </Link>\n                <p className=\"synopsis\">{movie.synopsis}</p>\n              </div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\n","import React, { Fragment, Component } from 'react';\nimport superagent from 'superagent';\n\nexport default class Review extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie_id: this.props.match.params.movie_id,\n      movie: {},\n      review: '', \n      rating: 1\n    };\n  }\n\n  componentDidMount() {\n    // Make a http get request using superagent\n    // Save response into state as movie object\n\n    superagent\n      .get('/search')\n      .query({\n        data: this.state.movie_id,\n        url: 'search'\n      })\n      .then(result => {\n        //console.log(result.body);\n        this.setState({\n          movie: result.body\n        });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  handleChangeReview = event => {\n    this.setState({\n      review: event.target.value\n    });\n  };\n\n  handleChangeRating = event => {\n    this.setState({\n      rating: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    \n    // TODO Send post request to server which will save review into DB\n    // Send an object which includes the user id, review, movie id, rating & recommend\n    // Send movie details data movie_id, title, overview, released_on, image_url\n    // Get user ID from local storage\n    const data = {\n      user_id: localStorage.getItem('userId'),\n      movie: {\n        movie_id: this.state.movie_id,\n        title: this.state.movie.title,\n        synopsis: this.state.movie.synopsis,\n        released_on: this.state.movie.released_on,\n        image_url: this.state.movie.image_url\n      },\n      review: {\n        text: this.state.review,\n        rating: this.state.rating,\n        recommended: '0'\n      }\n\n    };\n    console.log('data', data);\n    superagent\n      .post('/review')\n      .set('Content-Type', 'application/json')\n      .send(data)\n      .then(result => {\n        //console.log(result.body);\n        this.props.history.push('/dashboard');\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div id=\"Review\" className=\"component-container\">\n          <section className=\"movie-info\">\n          <div className=\"movie-poster\">\n                <img\n              src={this.state.movie.image_url}\n              alt={this.state.movie.title}/>\n            </div>\n            <div>\n              <h1>{this.state.movie.title}</h1>\n              <h4>Movie Synopsis: </h4>\n              <p className=\"synopsis\">{this.state.movie.synopsis}</p>\n            </div>\n            \n            \n          </section>\n\n          {/* TODO: Check if review already exists for this movie by the current user  */}\n\n          <form onSubmit={this.handleSubmit} className=\"review-form\">\n            <h2>Review Notes</h2>\n            <textarea\n              rows=\"6\"\n              cols=\"45\"\n              value={this.state.review}\n              onChange={this.handleChangeReview}\n            />\n            <p>SLIDER GOES HERE</p>\n            <select\n              value={this.state.rating}\n              onChange={this.handleChangeRating}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select><br /><br />\n            <button type=\"submit\">Save your review</button>\n          </form>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from \"react\";\n\n\nexport default function AboutUs() {\n  return (\n    <Fragment>\n      <div id=\"AboutUs\" class=\"component-container\">\n        <h1>Fluid Design</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n        <hr />\n        <img src=\"https://avatars.dicebear.com/v2/bottts/janehur.svg\" />\n        <h2>Jane Hur</h2>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\n        <hr />\n        <img src=\"https://avatars.dicebear.com/v2/bottts/brandonhurrington.svg\" />\n\n        <h2>Brandon Hurrington</h2>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\n        <hr />\n        <img src=\"https://avatars.dicebear.com/v2/bottts/melfiperez.svg\" />\n\n        <h2>Melfi Perez</h2>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\n        <hr />\n        <img src=\"https://avatars.dicebear.com/v2/bottts/mattstuhring.svg\" />\n\n        <h2>Matt Stuhring</h2>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment, Component } from \"react\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Navbar from \"./navbar/navbar.js\";\nimport Login from \"./login/login.js\";\nimport Dashboard from \"./dashboard/dashboard.js\";\nimport Search from \"./search/search.js\";\nimport Review from \"./review/review.js\";\nimport AboutUs from \"./about-us/about-us.js\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/search/:query\" component={Search} />\n            <Route path=\"/review/:movie_id\" component={Review} />\n            <Route path=\"/about-us\" component={AboutUs} />\n          </Switch>\n        </Fragment>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./styles/reset.css\";\nimport \"./styles/app.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}